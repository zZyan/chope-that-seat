# This is a basic workflow to help you get started with Actions

name: schedule_15min

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  schedule:
    - cron: '*/15 * * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'poetry'
      - run: poetry install
      # TODO enable after test added
      # - run: poetry run pytest

      - name: Cache Geckodriver
        uses: actions/cache@v3
        with:
          path: ~/cached-geckodriver
          key: ${{ runner.os }}-geckodriver
          restore-keys: |
            ${{ runner.os }}-geckodriver

      - name: Download and install Geckodriver
        run: |
          if [ ! -f ~/cached-geckodriver/geckodriver ]; then
            GECKODRIVER_VERSION=$(curl --location --request GET 'https://api.github.com/repos/mozilla/geckodriver/releases/latest' --header 'Accept: application/vnd.github+json' | python -c "import sys, json; print(json.load(sys.stdin)['tag_name'])")
            wget https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz
            tar -xzf geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz
            mkdir -p ~/cached-geckodriver
            mv geckodriver ~/cached-geckodriver/
          fi
          sudo cp ~/cached-geckodriver/geckodriver /usr/local/bin/

      # Runs a single command using the runners shell
      - name: Run main script for YZY
        env:
            TWILIO_AUTH_ID: ${{ secrets.TWILIO_AUTH_ID }}
            TWILIO_NUMBER:  ${{ secrets.TWILIO_NUMBER }}
            TWILIO_TOKEN:  ${{ secrets.TWILIO_TOKEN }}
            NUMBER: ${{ secrets.YZY_NUMBER }}
            LIST: ${{ secrets.YZY_LIST }}
        run: |
            python main.py -a $TWILIO_NUMBER -i $TWILIO_AUTH_ID -p $TWILIO_TOKEN -u $NUMBER -l $LIST

     # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
